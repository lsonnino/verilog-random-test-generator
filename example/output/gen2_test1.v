`timescale 1ns / 1ps

module testbench;
    reg clk;
    reg [2:0] in1;
    reg [4:0] in2;
    wire [4:0] out;

    module1 uut (
        .clk(clk),
        .in1(in1),
        .in2(in2),
        .out(out)
    );

    initial begin
        $dumpfile("waveform.vcd");
        $dumpvars(0, uut);

        // Initialize
        clk = 0;
        @(posedge clk);

        // Autogenerated code
        @(posedge clk); in1 = 12'h090; in2 = 20'hzzzzz;
        @(posedge clk); in1 = 12'h655; in2 = 20'hzzzzz;
        @(posedge clk); in1 = 12'hfde; in2 = 20'hzzzzz;
        @(posedge clk); in1 = 12'h5b4; in2 = 20'hzzzzz;
        @(posedge clk); in1 = 12'h150; in2 = 20'hzzzzz;
        @(posedge clk); in1 = 12'hcf2; in2 = 20'hzzzzz;
        @(posedge clk); in1 = 12'h0ac; in2 = 20'hzzzzz;
        @(posedge clk); in1 = 12'hfd7; in2 = 20'hzzzzz;
        @(posedge clk); in1 = 12'h5fa; in2 = 20'hzzzzz;
        @(posedge clk); in1 = 12'h1c2; in2 = 20'hzzzzz;


        @(posedge clk); in1 = 12'h090; in2 = 20'hfdd70;
        @(posedge clk); in1 = 12'h1c2; in2 = 20'h183eb;
        @(posedge clk); in1 = 12'h5fa; in2 = 20'h13a48;
        @(posedge clk); in1 = 12'hcf2; in2 = 20'hcd4dd;
        @(posedge clk); in1 = 12'hfd7; in2 = 20'hb9f8e;
        @(posedge clk); in1 = 12'h150; in2 = 20'h6bdd0;
        @(posedge clk); in1 = 12'h0ac; in2 = 20'h425d3;
        @(posedge clk); in1 = 12'h5b4; in2 = 20'h9728c;
        @(posedge clk); in1 = 12'h655; in2 = 20'h32022;
        @(posedge clk); in1 = 12'hfde; in2 = 20'h6eb97;

        // Finish
        $finish();
    end

    always #1 clk = ~clk;
endmodule